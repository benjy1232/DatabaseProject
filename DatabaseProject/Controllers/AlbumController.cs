using DatabaseProject.Models;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Mvc.Rendering;
using MySql.Data.MySqlClient;

namespace DatabaseProject.Controllers;

public class AlbumController(ILogger<AlbumController> logger, IConfiguration configuration) : Controller
{
    // GET
    public IActionResult Index()
    {
        ViewBag.AlbumNames = GetAlbums();
        CreateAlbumTable();
        return View();
    }

    private void CreateAlbumTable()
    {
        string result = "";
        // Okay using raw SQL here bc no user input is needed - no security issue here
        string commandString = """
                               SELECT Album.album_name, Album.release_year, Artist.artist_name FROM Album
                               INNER JOIN Artist ON Artist.id = Album.artist_id
                               """;
        try
        {
            using var connection = new MySqlConnection(configuration.GetConnectionString("mySqlConn"));
            connection.Open();
            using var command = connection.CreateCommand();
            command.CommandText = commandString;
            using var reader = command.ExecuteReader();
            while (reader.Read())
            {
                result += $"""
                            <tr>
                              <td>{reader[0]}</td>
                              <td>{reader[1]}</td>
                              <td>{reader[2]}</td>
                            </tr>
                            """;
            }
        }
        catch (MySqlException ex)
        {
            logger.LogError($"Error {ex.Number} has occurred: {ex.Message}");
        }

        ViewBag.Table = result;
    }

    public IActionResult AddNewAlbum(string albumName, int releaseYear, int artistId)
    {
        try
        {
            using var connection = new MySqlConnection(configuration.GetConnectionString("mySqlConn"));
            connection.Open();
            using var command = connection.CreateCommand();
            // Don't add id because it is autogenerated
            command.CommandText = "INSERT INTO Album (album_name, release_year, artist_id) VALUES (@albumName, @releaseYear, @artistId)";
            command.Parameters.AddWithValue("@albumName", albumName);
            command.Parameters.AddWithValue("@releaseYear", releaseYear);
            command.Parameters.AddWithValue("@artistId", artistId);
            command.Prepare();
            command.ExecuteNonQuery();
        }
        catch (MySqlException ex)
        {
            if (ex.Number == 1065)
            {
                logger.LogError($"Entry {albumName} already exists");
                return RedirectToAction("Index");
            }
            logger.LogError($"Error {ex.Number} has occurred: {ex.Message}");
            throw;
        }

        return RedirectToAction("Index");
    }

    public IActionResult DeleteAlbum(uint id)
    {
        try
        {
            using var connection = new MySqlConnection(configuration.GetConnectionString("mySqlConn"));
            connection.Open();
            using var command = connection.CreateCommand();
            command.CommandText = "DELETE FROM Album WHERE id = @id";
            command.Parameters.AddWithValue("@id", id);
            command.Prepare();
            int rowAffected = command.ExecuteNonQuery();
            logger.LogInformation($"Command String: {command.CommandText} ID: {id}");
            logger.LogInformation($"Number of rows affected {rowAffected}");
        }
        catch (MySqlException ex)
        {
            logger.LogError($"Error {ex.Number} has occurred: {ex.Message}");
            throw;
        }

        return RedirectToAction("Index");
    }

    public IActionResult UpdateAlbum(uint id, string albumName, int releaseYear)
    {
        try
        {
            using var connection = new MySqlConnection(configuration.GetConnectionString("mySqlConn"));
            connection.Open();
            using var command = connection.CreateCommand();
            command.CommandText = "UPDATE Album SET album_name = @albumName, release_year = @releaseYear WHERE id = @id";
            command.Parameters.AddWithValue("@albumName", albumName);
            command.Parameters.AddWithValue("@releaseYear", releaseYear);
            command.Parameters.AddWithValue("@id", id);
            command.Prepare();
            command.ExecuteNonQuery();
        }
        catch (MySqlException ex)
        {
            if (ex.Number == 1065)
            {
                logger.LogError($"Entry {albumName} already exists");
                return RedirectToAction("Index");
            }
            logger.LogError($"Error {ex.Number} has occurred: {ex.Message}");
            throw;
        }

        return RedirectToAction("Index");
    }

    private List<SelectListItem> GetAlbums()
    {
        List<SelectListItem> albums = new List<SelectListItem>();
        try
        {
            using var connection = new MySqlConnection(configuration.GetConnectionString("mySqlConn"));
            connection.Open();
            using var command = connection.CreateCommand();
            // id, album_name
            command.CommandText = "SELECT * FROM Album";

            using var reader = command.ExecuteReader();
            while (reader.Read())
            {
                albums.Add(new SelectListItem($"{reader[1]} ({reader[2]})", reader[0].ToString()));
            }
        }
        catch (MySqlException ex)
        {
            logger.LogError($"Error {ex.Number} has occurred: {ex.Message}");
            throw;
        }
        return albums;
    }
}